name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        rust:
          - stable
          - nightly
          - beta

    steps:
      - name: Ubuntu Required Deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install pkg-config libx11-dev libasound2-dev libudev-dev
          sudo apt install libxcb-randr0-dev libxcb-xtest0-dev libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev
          sudo apt install libxcb-render0-dev libxcb-xfixes0-dev libxcb1-dev
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --examples --features visualization

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features parallel
          
      - name: TestNoFeatures
        uses: actions-rs/cargo@v1
        with:
          command: test
          args:

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          RUSTFLAGS: '-Z instrument-coverage'
          LLVM_PROFILE_FILE: '%m.profraw'
      
          # CARGO_INCREMENTAL: '0'
          # RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          # RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features parallel
        env:
          RUSTFLAGS: '-Z instrument-coverage'
          LLVM_PROFILE_FILE: '%m.profraw'
      
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: 11662745-2cff-4f54-9a05-38ed078df7cb
    # runs-on: ubuntu-latest
    # steps:
    #  - uses: actions/checkout@v2
    
    #  - uses: actions-rs/toolchain@v1
    #    with:
    #     toolchain: nightly
    #     override: true

    #  - uses: actions-rs/cargo@v1
    #    with:
    #     command: clean

    # # - uses: Swatinem/rust-cache@v1
    # #    with:
    # #     key: coverage 
    #  - uses: actions-rs/cargo@v1
    #    with:
    #     command: test
    #     #args: --features visualization
    #    env:
    #       CARGO_INCREMENTAL: '0'
    #       RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    #       RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    #       LLVM_PROFILE_FILE: '%m.profraw'

    # #  - uses: actions-rs/cargo@v1
    # #    with:
    # #     command: test
    # #     args: --features parallel
    # #    env:
    # #       RUSTFLAGS: '-Z instrument-coverage'
    # #       LLVM_PROFILE_FILE: '%m.profraw'
       
    #  - name: Install grcov
    #    run: |
    #     rustup component add llvm-tools-preview
    #     curl -L https://github.com/mozilla/grcov/releases/download/v0.6.1/grcov-linux-x86_64.tar.bz2 | tar jxf -
    #  - name: Run grcov
    #    run: |
    #     ./grcov . --source-dir . --binary-path ./target/debug/ --output-type lcov --output-path ./lcov.info --branch 
    #  - name: Upload to Codecov
    #    run: |
    #     bash <(curl -s https://codecov.io/bash) -f ./lcov.info