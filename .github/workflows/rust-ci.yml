name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        rust:
          - stable
          - nightly
          - beta

    steps:
      - name: Ubuntu Required Deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install pkg-config libx11-dev libasound2-dev libudev-dev
          sudo apt install libxcb-randr0-dev libxcb-xtest0-dev libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev
          sudo apt install libxcb-render0-dev libxcb-xfixes0-dev libxcb1-dev
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --examples --features visualization

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features parallel
          
      - name: TestNoFeatures
        uses: actions-rs/cargo@v1
        with:
          command: test
          args:

  coverage:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - uses: actions-rs/toolchain@v1
       with:
        toolchain: nightly
        override: true

     - uses: Swatinem/rust-cache@v1
       with:
        key: coverage 
     - uses: actions-rs/cargo@v1
       with:
        command: test
        #args: --features visualization
       env:
          RUSTFLAGS: '-Zinstrument-coverage'
          LLVM_PROFILE_FILE: '%m.profraw'

     - uses: actions-rs/cargo@v1
       with:
        command: test
        args: --features parallel
       env:
          RUSTFLAGS: '-Zinstrument-coverage'
          LLVM_PROFILE_FILE: '%m.profraw'
     
     - name: Test LS
       run: |
       ls
     - name: Install grcov
       run: |
        rustup component add llvm-tools-preview
        curl -L https://github.com/mozilla/grcov/releases/download/v0.6.1/grcov-linux-x86_64.tar.bz2 | tar jxf -
     - name: Run grcov
       run: |
        ./grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
     - uses: codecov/codecov-action@v2
       with:
        token: ${{ secrets.CODECOV_TOKEN }} 
        files: ./lcov.info 